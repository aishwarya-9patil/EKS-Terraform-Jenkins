pipeline {
    agent any
    parameters {
        booleanParam(defaultValue: true, description: 'Automatically approve Terraform Apply?', name: 'Approve')
    }
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = 'ap-south-1'
    }
    stages {
        stage('Checkout SCM') {
            steps {
                script {
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/aishwarya-9patil/EKS-Terraform-Jenkins.git']])
                }
            }
        }

        stage('Initializing Terraform') {
            steps {
                script {
                    dir('terraform') {
                        // Debugging output
                        echo 'Initializing Terraform...'
                        sh 'terraform init || { echo "Terraform init failed"; exit 1; }'
                    }
                }
            }
        }

        stage('Validating Terraform') {
            steps {
                script {
                    dir('terraform') {
                        // Debugging output
                        echo 'Validating Terraform configuration...'
                        sh 'terraform validate || { echo "Terraform validation failed"; exit 1; }'
                    }
                }
            }
        }

        stage('Previewing the infrastructure') {
            steps {
                script {
                    dir('terraform') {
                        // Debugging output
                        echo 'Running terraform plan...'
                        sh 'terraform plan -out=tfplan || { echo "Terraform plan failed"; exit 1; }'
                    }
                }
            }
        }

        stage('Create/Destroy an EKS cluster') {
            when {
                expression { return params.Approve == true }
            }
            steps {
                script {
                    dir('terraform') {
                        // Debugging output
                        echo 'Running terraform apply...'
                        sh 'terraform apply "tfplan" --auto-approve || { echo "Terraform apply failed"; exit 1; }'
                    }
                }
            }
        }
    }
    post {
        failure {
            echo "The pipeline failed. Please check the error logs above for more details."
        }
        success {
            echo "The pipeline completed successfully!"
        }
    }
}
